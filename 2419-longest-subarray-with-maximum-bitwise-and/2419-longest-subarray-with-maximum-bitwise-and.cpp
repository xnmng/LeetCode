class Solution {
public:
    int longestSubarray(vector<int>& nums) {
        auto maxVal{0};
        auto maxCount{0};
        auto val{0};
        auto count{0};
        for (auto i = 0; i < nums.size(); ++i) {
            if (nums[i] > val) {
                val = nums[i];
                count = 1;
            }
            else if (nums[i] == val && nums[i-1] == val) ++count;
            else {
                if (val > maxVal) {
                    maxVal = val;
                    maxCount = count;            
                }
                if (val == maxVal) {
                    maxCount = max(maxCount, count);
                }
                val = 0;
                count = 0;
            }
            // cout << nums[i] << " " << val << " " << count << "\n";
        }
        cout << val << " " << count << " " << maxVal << " " << maxCount << "\n";
        if (val == maxVal) return max(count, maxCount);
        return val > maxVal ? count : maxCount;
    }
};
// [311155,311155,311155,311155,311155,311155,311155,311155,201191,311155]
